{"version":3,"sources":["components/AddCategory.js","herlpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","oldCategorie","type","value","onChange","target","onFocus","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"yKAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,2BAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,mCACI,sBAAMC,SAfO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAY,OAAKP,GAAL,mBAAoBO,OAC9CN,EAAc,MAWd,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAvBU,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,QAuBXG,QAZI,SAACT,GACjBF,EAAcE,EAAEQ,OAAOF,MAAQ,Y,+BCrB1BI,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACAC,MAAM,yCAAD,OAA0CC,UAAUH,GAApD,uDADL,cACbI,EADa,gBAEEA,EAAKC,OAFP,uBAEZC,EAFY,EAEZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QARvB,kBAYZL,GAZY,2CAAH,sDCEPQ,EAAc,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCFHQ,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SASrB,ECVwB,SAAEA,GAC1B,MAA0Bf,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENxB,EAASC,GACRwB,MAAK,SAAAC,GAEFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAKlB,CAACpB,IAEGqB,EDVyBK,CAAa1B,GAAjCa,EAAZ,EAAOP,KAAac,EAApB,EAAoBA,QAGpB,OACI,qCACI,oBAAIJ,UAAW,oCAAf,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAW,mCAAd,wBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOL,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEc3BiB,MApCf,WAII,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAIA,6BAEQ4C,EAAWpB,KAAI,SAAAR,GAAQ,OACvB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCtBvB6B,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.481b4706.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Escribe una bÃºsqueda');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(oldCategorie => [inputValue, ...oldCategorie])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    const handleFocus = (e) => {\r\n        setInputValue(e.target.value = '')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type='text'\r\n                    value= { inputValue }\r\n                    onChange={ handleInputChange }\r\n                    onFocus= {handleFocus}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n    const resp = await fetch(`http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=vwwqJRf0C02iHfXE5STsRszg7A0XJmIG`)\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    // useEffect(()=> {\r\n    //     getGifs(category)\r\n    //         .then(setImages)\r\n    // }, [category])\r\n\r\n    const {data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className= 'animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n            {loading && <p className= 'animate__animated animate__flash'>Loading...</p> }\r\n\r\n            <div className='card-grid'>\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                                key={ img.id }\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../herlpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=> {\r\n        \r\n        getGifs( category )\r\n        .then(imgs => {\r\n\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n\r\n        })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nfunction GifExpertApp () {\r\n\r\n    //const categories = ['One Punch', 'Dragon Ball', 'Listorti']\r\n    \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    // const handleAdd = () => {\r\n    //     const newCategorie = 'Breaking Bad'\r\n    //     setCategories(oldCategorie => [...oldCategorie, newCategorie])\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <hr></hr>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    \r\n                    />\r\n                    \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nconst divRoot = document.getElementById('root')\n\nReactDOM.render(<GifExpertApp />, divRoot);\n\n\n"],"sourceRoot":""}